# -*- coding: utf-8 -*-
"""Tugas Sesi 5

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yzE2e_MwgM5mXuAqE8Uh9K4H6zHtRE61
"""

import numpy as np

def my_num_calc(f, a, b, n, option):
  h = (b - a) / (n - 1)
  x = np.arange(a, b + h, h)

  if option == "rect":
    I = 0
    for i in range(1, n):
      I += f(x[i]) * h
    return I

  elif option == "trap":
    I = 0.5 * (f(x[0]) + f(x[-1]))
    for i in range(1, n - 1):
      I += f(x[i])
    I *= h
    return I

  elif option == "simp":
    if n % 2 == 0:
      print("Simpson's rule requires an odd number of points (even number of intervals).")

    I = f(x[0]) + f(x[-1])
    for i in range(1, n - 1):
      if i % 2 == 0:
        I += 2 * f(x[i])
      else:
        I += 4 * f(x[i])
    I *= h / 3
    return I

  else:
    print("Unknown option. Use 'rect', 'trap', or 'simp'.")

f = lambda x: x**2
print(my_num_calc(f, 0, 1, 3, "rect"))
print(my_num_calc(f, 0, 1, 3, "trap"))
print(my_num_calc(f, 0, 1, 3, "simp"))

f = lambda x: np.exp(x**2)
print(my_num_calc(f, -1, 1, 101, "simp"))
print(my_num_calc(f, -1, 1, 10001, "simp"))
print(my_num_calc(f, -1, 1, 100001, "simp"))
